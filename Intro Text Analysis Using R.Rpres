Intro to Text Analysis Using R
========================================================
author: Cindy Cheng
date: November 4, 2020
transition: none
autosize: true
css: custom.css

## Murty Sunak Quantitative and Computing Lab

Before We Start 
========================================================

Make sure that you have: 

- Sign-in
- Install R and RStudio or have RStudio Cloud account
- Download files

Workshop Agenda
========================================================

We are going over: 

- Why R
- What's text analysis
- Generate output for frequency and sentiment analyses

Why R
========================================================

Because: 

- R is free
- R provides a programming environment
- R has lots of packages 

Text Analysis
========================================================

What's text analysis: 

- Aka text mining
- Process to understand and sort text for gaining insights
- Useful across different fields:
  * Research: qualitative data
  * Marketing: customer reviews
  * Social media: user reviews

Today's Data: Movie Reviews
========================================================

[Cats the Musical (2019) Reviews] (https://www.rottentomatoes.com/m/cats_2019/reviews?type=verified_audience)

- Text file: reviews.txt 
- File contains 20 verified audience reviews
- Use file for: 
  - Word frequency: **tm** package
  - Sentiment analysis: **sentimentr** package

Word Frequency
========================================================

Using tm package to generate: 

- Frequency table 
- Frequency word bar plot
- Word cloud

Reference: [Understanding and Writing Your First Text Mining Script with R](https://towardsdatascience.com/understanding-and-writing-your-first-text-mining-script-with-r-c74a7efbe30f)

Install Text Mining Packages
====================================
```{r eval=FALSE}
# Install text mining package
install.packages("tm")
# Install text stemming package
install.packages("SnowballC") 
# Install word-cloud generator package
install.packages("wordcloud")
# Install color palettes package
install.packages("RColorBrewer")
# Load packages
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")

```

Read Text File
====================================
```{r eval=FALSE}
# Import text file 
text <- readLines(file.choose())
# Load the text as corpus
docs <- Corpus(VectorSource(text))
# Check text 
inspect(docs)

```

Text Transformation
====================================
```{r eval=FALSE}
# Use tm_map to replace special characters with space
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
```

Text Cleaning
====================================
```{r eval=FALSE}
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove stop word
# Specify stopwords as a character vector
docs <- tm_map(docs, removeWords, c("I", "it")) 
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
docs <- tm_map(docs, stemDocument)

```

Document Matrix
====================================
```{r eval=FALSE}
# Document matrix is a table containing the frequency of the words. Column names are words and row names are documents. The function TermDocumentMatrix() from text mining package can then be used
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)

```

Frequent Words and Associations
====================================
```{r eval=FALSE}
# Find word that appears at least four times
findFreqTerms(dtm, lowfreq = 4)
# Find association with the "music" 
findAssocs(dtm, terms = "music", corlimit = 0.3)

```

Word Frequency Bar Plot
====================================
```{r eval=FALSE}
# Plot top10 frequent words
barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
        col ="lightblue", main ="Most frequent words",
        ylab = "Word frequencies")

```

Generate Word Cloud
====================================
```{r eval=FALSE}
# Generate word cloud
set.seed(1234) # Random number
wordcloud(words = d$word, scale = c(2, 0.2), freq = d$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"))

```

Word Cloud Color
========================================================

[RColorBrewer](https://www.r-graph-gallery.com/38-rcolorbrewers-palettes.html)

- Use to manage colors 
- Three palette types: sequential, divergent and qualitative
- Change word cloud color: 
```{r eval=FALSE}
# Word cloud
set.seed(1234) # Random number
wordcloud(words = d$word, scale = c(2, 0.2), freq = d$freq, min.freq = 1, max.words=200, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Set2"))

```

Sentiment Analysis
========================================================

Use the sentimentr package to: 

- Sentiment table
- Summary statistics
- Sentiment histogram

Reference: [Sentiment Analysis with R](https://youtu.be/y21yWgMWMc8)

Install Sentimentr Package
====================================
```{r eval=FALSE}
# Install sentimentr package 
install.packages("sentimentr")
# Load package
library("sentimentr")
# Check text file
head(text)

```

Sentiment Table and Summary Statistics
====================================
```{r eval=FALSE}
# Sentiment table
sentiment_by(text)
# Set sentiment as variable
sentiment = sentiment_by(text)
# Summary stats
summary(sentiment$ave_sentiment)

```

Sentiment Histogram
====================================
```{r eval=FALSE}
# Import package
install.packages("ggplot2")
# Install library
library("ggplot2")
# Generate histogram
qplot(sentiment$ave_sentiment, geom="histogram", binwidth=0.1, main="Review Sentiment Histogram")

```

Hands on exercises (20 to 25 minutes)
========================================================

1. Text mining package can be used on other content as well, use either the Jobs or Rowling [speech](https://www.lifehack.org/794639/famous-speeches), generate the frequency word bar plot and the word cloud

2. Use the [bike](https://www.amazon.com/Schwinn-Front-Suspension-Lightweight-Step-Over-Drivetrain/dp/B07NZY5HY6/ref=cm_cr_arp_d_product_top?ie=UTF8) reviews or [restaurant](https://www.kingandprince.com/dining-guest-reviews.aspx) reviews, generate a sentiment histogram

When done: 
* Post the word frequency bar plot, word cloud and the sentiment histogram to  [Gallery](https://docs.google.com/presentation/d/1HiaHUejWNUZFUAB8LoxT_9cOz1xZCT_fWLScCMYM9M4/edit?usp=sharing)
* Include 1 or 2 sentences of your take on the output

Take a gallery walk on the output in the last 5-10 minutes

If not done, that's ok, please send the exercise script to qcl@cmc.edu

Helpful Resources
========================================================

From CRAN: 

- [Text mining](https://cran.r-project.org/web/packages/tm/index.html)

- [Sentiment](https://cran.r-project.org/web/packages/sentimentr/readme/README.html)

LinkedIn Learning: 

- [CMC learning](https://www.cmc.edu/information-technology/linkedin-learning)

Questions? 
========================================================

Please come visit us at Kravis Lower Court or email the QCL at qcl@cmc.edu for any questions.  

Check the [QCL website](https://www.cmc.edu/qcl) for information 

Thank you
========================================================

Please fill the survey!

Look forward to seeing you attend another QCL workshop!

